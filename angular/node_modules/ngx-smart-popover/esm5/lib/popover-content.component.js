/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * This is a continuation of ngx-popover
 * @Reference {github} https://github.com/pleerock/ngx-popover
 */
import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Renderer2, ViewChild } from '@angular/core';
import { PopoverPlacement } from './popover.placement';
var PopoverContentComponent = /** @class */ (function () {
    // -------------------------------------------------------------------------
    // Constructor
    // -------------------------------------------------------------------------
    function PopoverContentComponent(element, cdr, renderer) {
        var _this = this;
        this.element = element;
        this.cdr = cdr;
        this.renderer = renderer;
        this.placement = PopoverPlacement.Top;
        this.animation = true;
        this.closeOnClickOutside = false;
        this.closeOnMouseOutside = false;
        this.size = 'small';
        this.onCloseFromOutside = new EventEmitter();
        this.top = -10000;
        this.left = -10000;
        this.isIn = false;
        this.displayType = 'none';
        this.opacity = 0;
        this.transitionEnabled = false;
        this.windowWidth = window.innerWidth;
        this.windowHeight = window.innerHeight;
        // -------------------------------------------------------------------------
        // Anonymous
        // -------------------------------------------------------------------------
        /**
         * Closes dropdown if user clicks outside of this directive.
         */
        this.onDocumentMouseDown = (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            /** @type {?} */
            var element = _this.element.nativeElement;
            if (!element || !_this.popover) {
                return;
            }
            if (element.contains(event.target) || _this.popover.getElement().contains(event.target)) {
                return;
            }
            _this.onCloseFromOutside.emit(undefined);
        });
    }
    // -------------------------------------------------------------------------
    // Lifecycle callbacks
    // -------------------------------------------------------------------------
    // -------------------------------------------------------------------------
    // Lifecycle callbacks
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.ngAfterViewInit = 
    // -------------------------------------------------------------------------
    // Lifecycle callbacks
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.closeOnClickOutside) {
            this.listenClickFunc = this.renderer.listen('document', 'mousedown', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return _this.onDocumentMouseDown(event); }));
        }
        if (this.closeOnMouseOutside) {
            this.listenMouseFunc = this.renderer.listen('document', 'mouseover', (/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return _this.onDocumentMouseDown(event); }));
        }
        // Always close on mobile touch event outside.
        this.listenTouchFunc = this.renderer.listen('document', 'touchstart', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return _this.onDocumentMouseDown(event); }));
        this.show();
        this.cdr.detectChanges();
    };
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.closeOnClickOutside && this.listenClickFunc) {
            this.listenClickFunc();
        }
        if (this.closeOnMouseOutside && this.listenMouseFunc) {
            this.listenMouseFunc();
        }
        if (!!this.listenTouchFunc) {
            this.listenTouchFunc();
        }
    };
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.updatePosition = 
    // -------------------------------------------------------------------------
    // Public Methods
    // -------------------------------------------------------------------------
    /**
     * @return {?}
     */
    function () {
        // if visible, reposition
        if (this.opacity) {
            /** @type {?} */
            var p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement);
            this.top = p.top;
            this.left = p.left;
        }
    };
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.show = /**
     * @return {?}
     */
    function () {
        if (!this.popover || !this.popover.getElement()) {
            return;
        }
        /** @type {?} */
        var p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement);
        this.displayType = 'block';
        this.top = p.top;
        this.left = p.left;
        this.isIn = true;
        this.transitionEnabled = true;
        this.opacity = 1;
    };
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.hide = /**
     * @return {?}
     */
    function () {
        this.top = -10000;
        this.left = -10000;
        this.isIn = true;
        this.popover.hide();
    };
    /**
     * @return {?}
     */
    PopoverContentComponent.prototype.hideFromPopover = /**
     * @return {?}
     */
    function () {
        this.top = -10000;
        this.left = -10000;
        this.isIn = true;
        this.transitionEnabled = false;
        this.opacity = 0;
    };
    // -------------------------------------------------------------------------
    // Protected Methods
    // -------------------------------------------------------------------------
    // -------------------------------------------------------------------------
    // Protected Methods
    // -------------------------------------------------------------------------
    /**
     * @protected
     * @param {?} hostEl
     * @param {?} targetEl
     * @param {?} positionStr
     * @param {?=} appendToBody
     * @return {?}
     */
    PopoverContentComponent.prototype.positionElements = 
    // -------------------------------------------------------------------------
    // Protected Methods
    // -------------------------------------------------------------------------
    /**
     * @protected
     * @param {?} hostEl
     * @param {?} targetEl
     * @param {?} positionStr
     * @param {?=} appendToBody
     * @return {?}
     */
    function (hostEl, targetEl, positionStr, appendToBody) {
        if (appendToBody === void 0) { appendToBody = false; }
        /** @type {?} */
        var positionStrParts = ((/** @type {?} */ (positionStr))).split(' ');
        /** @type {?} */
        var pos0 = positionStrParts[0];
        /** @type {?} */
        var pos1 = positionStrParts[1] || 'center';
        /** @type {?} */
        var hostElPos = appendToBody ? this.offset(hostEl) : this.position(hostEl);
        /** @type {?} */
        var targetElWidth = targetEl.offsetWidth;
        /** @type {?} */
        var targetElHeight = targetEl.offsetHeight;
        this.effectivePlacement = pos0 = this.getEffectivePlacement(pos0, hostEl, targetEl);
        /** @type {?} */
        var shiftWidth = {
            center: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left + hostElPos.width / 2 - targetElWidth / 2;
            }),
            left: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left;
            }),
            right: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left + hostElPos.width;
            }),
            topOrBottomRight: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left + hostElPos.width / 2;
            }),
            topOrBottomLeft: (/**
             * @return {?}
             */
            function () {
                return hostElPos.left - targetElWidth + hostElPos.width / 2;
            })
        };
        /** @type {?} */
        var shiftHeight = {
            center: (/**
             * @return {?}
             */
            function () {
                return hostElPos.top + hostElPos.height / 2 - targetElHeight / 2;
            }),
            top: (/**
             * @return {?}
             */
            function () {
                return hostElPos.top;
            }),
            bottom: (/**
             * @return {?}
             */
            function () {
                return hostElPos.top + hostElPos.height;
            })
        };
        /** @type {?} */
        var targetElPos;
        switch (pos0) {
            case PopoverPlacement.Right:
                targetElPos = {
                    top: shiftHeight[pos1](),
                    left: shiftWidth[pos0]()
                };
                break;
            case PopoverPlacement.Left:
                targetElPos = {
                    top: shiftHeight[pos1](),
                    left: hostElPos.left - targetElWidth
                };
                break;
            case PopoverPlacement.Bottom:
                targetElPos = {
                    top: shiftHeight[pos0](),
                    left: shiftWidth[pos1]()
                };
                break;
            case PopoverPlacement.TopLeft:
                targetElPos = {
                    top: hostElPos.top - targetElHeight,
                    left: shiftWidth['topOrBottomLeft']()
                };
                break;
            case PopoverPlacement.TopRight:
                targetElPos = {
                    top: hostElPos.top - targetElHeight,
                    left: shiftWidth['topOrBottomRight']()
                };
                break;
            case PopoverPlacement.BottomLeft:
                targetElPos = {
                    top: shiftHeight[PopoverPlacement.Bottom](),
                    left: shiftWidth['topOrBottomLeft']()
                };
                break;
            case PopoverPlacement.BottomRight:
                targetElPos = {
                    top: shiftHeight[PopoverPlacement.Bottom](),
                    left: shiftWidth['topOrBottomRight']()
                };
                break;
            default:
                targetElPos = {
                    top: hostElPos.top - targetElHeight,
                    left: shiftWidth[pos1]()
                };
                break;
        }
        return targetElPos;
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    PopoverContentComponent.prototype.position = /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    function (nativeEl) {
        /** @type {?} */
        var offsetParentBCR = { top: 0, left: 0 };
        /** @type {?} */
        var elBCR = this.offset(nativeEl);
        /** @type {?} */
        var offsetParentEl = this.parentOffsetEl(nativeEl);
        if (offsetParentEl !== window.document) {
            offsetParentBCR = this.offset(offsetParentEl);
            offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;
            offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;
        }
        /** @type {?} */
        var boundingClientRect = nativeEl.getBoundingClientRect();
        return {
            width: boundingClientRect.width || nativeEl.offsetWidth,
            height: boundingClientRect.height || nativeEl.offsetHeight,
            top: elBCR.top - offsetParentBCR.top,
            left: elBCR.left - offsetParentBCR.left
        };
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    PopoverContentComponent.prototype.offset = /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    function (nativeEl) {
        /** @type {?} */
        var boundingClientRect = nativeEl.getBoundingClientRect();
        return {
            width: boundingClientRect.width || nativeEl.offsetWidth,
            height: boundingClientRect.height || nativeEl.offsetHeight,
            top: boundingClientRect.top + (window.pageYOffset || window.document.documentElement.scrollTop),
            left: boundingClientRect.left + (window.pageXOffset || window.document.documentElement.scrollLeft)
        };
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @param {?} cssProp
     * @return {?}
     */
    PopoverContentComponent.prototype.getStyle = /**
     * @protected
     * @param {?} nativeEl
     * @param {?} cssProp
     * @return {?}
     */
    function (nativeEl, cssProp) {
        if (((/** @type {?} */ (nativeEl))).currentStyle) { // IE
            return ((/** @type {?} */ (nativeEl))).currentStyle[cssProp];
        }
        if (window.getComputedStyle) {
            return ((/** @type {?} */ (window.getComputedStyle)))(nativeEl)[cssProp];
        }
        // finally try and get inline style
        return ((/** @type {?} */ (nativeEl.style)))[cssProp];
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    PopoverContentComponent.prototype.isStaticPositioned = /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    function (nativeEl) {
        return (this.getStyle(nativeEl, 'position') || 'static') === 'static';
    };
    /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    PopoverContentComponent.prototype.parentOffsetEl = /**
     * @protected
     * @param {?} nativeEl
     * @return {?}
     */
    function (nativeEl) {
        /** @type {?} */
        var offsetParent = nativeEl.offsetParent || window.document;
        while (offsetParent && offsetParent !== window.document && this.isStaticPositioned(offsetParent)) {
            offsetParent = offsetParent.offsetParent;
        }
        return offsetParent || window.document;
    };
    // Check for overflow of the viewport and reflect the position if necessary.
    // Check for overflow of the viewport and reflect the position if necessary.
    /**
     * @protected
     * @param {?} placement
     * @param {?} hostElement
     * @param {?} targetElement
     * @return {?}
     */
    PopoverContentComponent.prototype.getEffectivePlacement = 
    // Check for overflow of the viewport and reflect the position if necessary.
    /**
     * @protected
     * @param {?} placement
     * @param {?} hostElement
     * @param {?} targetElement
     * @return {?}
     */
    function (placement, hostElement, targetElement) {
        /** @type {?} */
        var hostElBoundingRect = hostElement.getBoundingClientRect();
        /** @type {?} */
        var desiredPlacement = placement || PopoverPlacement.Top;
        // Reflect appropriately if overflow.
        if (desiredPlacement === PopoverPlacement.Top) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top - targetElement.offsetHeight < 0;
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 + targetElement.offsetWidth / 2 > this.windowWidth;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 - targetElement.offsetWidth / 2 < 0;
            if (isTopOverflow) {
                return PopoverPlacement.Bottom;
            }
            else if (isRightOverflow) {
                return PopoverPlacement.TopLeft;
            }
            else if (isLeftOverflow) {
                return PopoverPlacement.TopRight;
            }
        }
        if (desiredPlacement === PopoverPlacement.Bottom) {
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 + targetElement.offsetWidth / 2 > this.windowWidth;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 - targetElement.offsetWidth / 2 < 0;
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight;
            if (isBottomOverflow) {
                return PopoverPlacement.Top;
            }
            else if (isRightOverflow) {
                return PopoverPlacement.BottomLeft;
            }
            else if (isLeftOverflow) {
                return PopoverPlacement.BottomRight;
            }
        }
        if (desiredPlacement === PopoverPlacement.Left) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 - targetElement.offsetHeight / 2 < 0;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left - targetElement.offsetWidth < 0;
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 + targetElement.offsetHeight / 2 > this.windowHeight;
            if (isLeftOverflow) {
                return PopoverPlacement.Right;
            }
            else if (isTopOverflow) {
                return PopoverPlacement.BottomLeft;
            }
            else if (isBottomOverflow) {
                return PopoverPlacement.TopLeft;
            }
        }
        if (desiredPlacement === PopoverPlacement.Right) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 - targetElement.offsetHeight / 2 < 0;
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth;
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 + targetElement.offsetHeight / 2 > this.windowHeight;
            if (isRightOverflow) {
                return PopoverPlacement.Left;
            }
            else if (isTopOverflow) {
                return PopoverPlacement.BottomRight;
            }
            else if (isBottomOverflow) {
                return PopoverPlacement.TopRight;
            }
        }
        if (desiredPlacement === PopoverPlacement.TopRight) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top - targetElement.offsetHeight < 0;
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth;
            if (isTopOverflow && isRightOverflow) {
                return PopoverPlacement.BottomLeft;
            }
            else if (isTopOverflow) {
                return PopoverPlacement.BottomRight;
            }
            else if (isRightOverflow) {
                return PopoverPlacement.TopLeft;
            }
        }
        if (desiredPlacement === PopoverPlacement.TopLeft) {
            /** @type {?} */
            var isTopOverflow = hostElBoundingRect.top - targetElement.offsetHeight < 0;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left - targetElement.offsetWidth < 0;
            if (isTopOverflow && isLeftOverflow) {
                return PopoverPlacement.BottomRight;
            }
            else if (isTopOverflow) {
                return PopoverPlacement.BottomLeft;
            }
            else if (isLeftOverflow) {
                return PopoverPlacement.TopRight;
            }
        }
        if (desiredPlacement === PopoverPlacement.BottomRight) {
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight;
            /** @type {?} */
            var isRightOverflow = hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth;
            if (isBottomOverflow && isRightOverflow) {
                return PopoverPlacement.TopLeft;
            }
            else if (isBottomOverflow) {
                return PopoverPlacement.TopRight;
            }
            else if (isRightOverflow) {
                return PopoverPlacement.BottomLeft;
            }
        }
        if (desiredPlacement === PopoverPlacement.BottomLeft) {
            /** @type {?} */
            var isBottomOverflow = hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight;
            /** @type {?} */
            var isLeftOverflow = hostElBoundingRect.left - targetElement.offsetWidth < 0;
            if (isBottomOverflow && isLeftOverflow) {
                return PopoverPlacement.TopRight;
            }
            else if (isBottomOverflow) {
                return PopoverPlacement.TopLeft;
            }
            else if (isLeftOverflow) {
                return PopoverPlacement.BottomRight;
            }
        }
        return desiredPlacement;
    };
    PopoverContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'popover-content',
                    template: "\n    <div #popoverDiv\n        class=\"bs-popover-{{ effectivePlacement }} popover-content popover {{ parentClass }}\"\n        [ngClass]=\"{\n            'sm': size === 'small',\n            'md-sm': size === 'medium-small',\n            'md': size === 'medium',\n            'lg': size === 'large'\n        }\"\n        [style.top.px]=\"top\"\n        [style.left.px]=\"left\"\n        [style.transition]=\"(transitionEnabled ? '0.15s opacity' : '')\"\n        [style.opacity]=\"opacity\"\n        [style.display]=\"'block'\"\n        [class.in]=\"isIn\"\n        role=\"popover\">\n            <div [hidden]=\"!closeOnMouseOutside\" class=\"virtual-area\"></div>\n            <div class=\"arrow\"></div>\n            <div class=\"popover-header\" [hidden]=\"!title\">{{ title }}</div>\n            <div class=\"popover-body\">\n                <ng-content></ng-content>\n                {{ content }}\n            </div>\n    </div>\n    "
                }] }
    ];
    /** @nocollapse */
    PopoverContentComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: Renderer2 }
    ]; };
    PopoverContentComponent.propDecorators = {
        content: [{ type: Input }],
        placement: [{ type: Input }],
        title: [{ type: Input }],
        parentClass: [{ type: Input }],
        animation: [{ type: Input }],
        closeOnClickOutside: [{ type: Input }],
        closeOnMouseOutside: [{ type: Input }],
        size: [{ type: Input }],
        popoverDiv: [{ type: ViewChild, args: ['popoverDiv',] }]
    };
    return PopoverContentComponent;
}());
export { PopoverContentComponent };
if (false) {
    /** @type {?} */
    PopoverContentComponent.prototype.content;
    /** @type {?} */
    PopoverContentComponent.prototype.placement;
    /** @type {?} */
    PopoverContentComponent.prototype.title;
    /** @type {?} */
    PopoverContentComponent.prototype.parentClass;
    /** @type {?} */
    PopoverContentComponent.prototype.animation;
    /** @type {?} */
    PopoverContentComponent.prototype.closeOnClickOutside;
    /** @type {?} */
    PopoverContentComponent.prototype.closeOnMouseOutside;
    /** @type {?} */
    PopoverContentComponent.prototype.size;
    /** @type {?} */
    PopoverContentComponent.prototype.popoverDiv;
    /** @type {?} */
    PopoverContentComponent.prototype.popover;
    /** @type {?} */
    PopoverContentComponent.prototype.onCloseFromOutside;
    /** @type {?} */
    PopoverContentComponent.prototype.top;
    /** @type {?} */
    PopoverContentComponent.prototype.left;
    /** @type {?} */
    PopoverContentComponent.prototype.isIn;
    /** @type {?} */
    PopoverContentComponent.prototype.displayType;
    /** @type {?} */
    PopoverContentComponent.prototype.effectivePlacement;
    /** @type {?} */
    PopoverContentComponent.prototype.opacity;
    /** @type {?} */
    PopoverContentComponent.prototype.transitionEnabled;
    /** @type {?} */
    PopoverContentComponent.prototype.windowWidth;
    /** @type {?} */
    PopoverContentComponent.prototype.windowHeight;
    /** @type {?} */
    PopoverContentComponent.prototype.listenClickFunc;
    /** @type {?} */
    PopoverContentComponent.prototype.listenMouseFunc;
    /** @type {?} */
    PopoverContentComponent.prototype.listenTouchFunc;
    /**
     * Closes dropdown if user clicks outside of this directive.
     * @type {?}
     */
    PopoverContentComponent.prototype.onDocumentMouseDown;
    /**
     * @type {?}
     * @protected
     */
    PopoverContentComponent.prototype.element;
    /**
     * @type {?}
     * @protected
     */
    PopoverContentComponent.prototype.cdr;
    /**
     * @type {?}
     * @protected
     */
    PopoverContentComponent.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1jb250ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1zbWFydC1wb3BvdmVyLyIsInNvdXJjZXMiOlsibGliL3BvcG92ZXItY29udGVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFLQSxPQUFPLEVBRUwsaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLEtBQUssRUFFTCxTQUFTLEVBQ1QsU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXZEO0lBaUZFLDRFQUE0RTtJQUM1RSxjQUFjO0lBQ2QsNEVBQTRFO0lBRTVFLGlDQUFzQixPQUFtQixFQUNuQixHQUFzQixFQUN0QixRQUFtQjtRQUZ6QyxpQkFHQztRQUhxQixZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQ25CLFFBQUcsR0FBSCxHQUFHLENBQW1CO1FBQ3RCLGFBQVEsR0FBUixRQUFRLENBQVc7UUF0RHpCLGNBQVMsR0FBcUIsZ0JBQWdCLENBQUMsR0FBRyxDQUFDO1FBR25ELGNBQVMsR0FBRyxJQUFJLENBQUM7UUFDakIsd0JBQW1CLEdBQUcsS0FBSyxDQUFDO1FBQzVCLHdCQUFtQixHQUFHLEtBQUssQ0FBQztRQUM1QixTQUFJLEdBQTJELE9BQU8sQ0FBQztRQVFoRix1QkFBa0IsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3hDLFFBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztRQUNiLFNBQUksR0FBRyxDQUFDLEtBQUssQ0FBQztRQUNkLFNBQUksR0FBRyxLQUFLLENBQUM7UUFDYixnQkFBVyxHQUFHLE1BQU0sQ0FBQztRQUVyQixZQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQ1osc0JBQWlCLEdBQUcsS0FBSyxDQUFDO1FBRTFCLGdCQUFXLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUNoQyxpQkFBWSxHQUFHLE1B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Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGlzIGEgY29udGludWF0aW9uIG9mIG5neC1wb3BvdmVyXG4gKiBAUmVmZXJlbmNlIHtnaXRodWJ9IGh0dHBzOi8vZ2l0aHViLmNvbS9wbGVlcm9jay9uZ3gtcG9wb3ZlclxuICovXG5cbmltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE9uRGVzdHJveSxcbiAgUmVuZGVyZXIyLFxuICBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb3BvdmVyRGlyZWN0aXZlIH0gZnJvbSAnLi9wb3BvdmVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBQb3BvdmVyUGxhY2VtZW50IH0gZnJvbSAnLi9wb3BvdmVyLnBsYWNlbWVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvcG92ZXItY29udGVudCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiAjcG9wb3ZlckRpdlxuICAgICAgICBjbGFzcz1cImJzLXBvcG92ZXIte3sgZWZmZWN0aXZlUGxhY2VtZW50IH19IHBvcG92ZXItY29udGVudCBwb3BvdmVyIHt7IHBhcmVudENsYXNzIH19XCJcbiAgICAgICAgW25nQ2xhc3NdPVwie1xuICAgICAgICAgICAgJ3NtJzogc2l6ZSA9PT0gJ3NtYWxsJyxcbiAgICAgICAgICAgICdtZC1zbSc6IHNpemUgPT09ICdtZWRpdW0tc21hbGwnLFxuICAgICAgICAgICAgJ21kJzogc2l6ZSA9PT0gJ21lZGl1bScsXG4gICAgICAgICAgICAnbGcnOiBzaXplID09PSAnbGFyZ2UnXG4gICAgICAgIH1cIlxuICAgICAgICBbc3R5bGUudG9wLnB4XT1cInRvcFwiXG4gICAgICAgIFtzdHlsZS5sZWZ0LnB4XT1cImxlZnRcIlxuICAgICAgICBbc3R5bGUudHJhbnNpdGlvbl09XCIodHJhbnNpdGlvbkVuYWJsZWQgPyAnMC4xNXMgb3BhY2l0eScgOiAnJylcIlxuICAgICAgICBbc3R5bGUub3BhY2l0eV09XCJvcGFjaXR5XCJcbiAgICAgICAgW3N0eWxlLmRpc3BsYXldPVwiJ2Jsb2NrJ1wiXG4gICAgICAgIFtjbGFzcy5pbl09XCJpc0luXCJcbiAgICAgICAgcm9sZT1cInBvcG92ZXJcIj5cbiAgICAgICAgICAgIDxkaXYgW2hpZGRlbl09XCIhY2xvc2VPbk1vdXNlT3V0c2lkZVwiIGNsYXNzPVwidmlydHVhbC1hcmVhXCI+PC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYXJyb3dcIj48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwb3BvdmVyLWhlYWRlclwiIFtoaWRkZW5dPVwiIXRpdGxlXCI+e3sgdGl0bGUgfX08L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwb3BvdmVyLWJvZHlcIj5cbiAgICAgICAgICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgICAgICAgICAgICAge3sgY29udGVudCB9fVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgYFxufSlcbmV4cG9ydCBjbGFzcyBQb3BvdmVyQ29udGVudENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gSW5wdXRzIC8gT3V0cHV0c1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIEBJbnB1dCgpIHB1YmxpYyBjb250ZW50OiBzdHJpbmc7XG4gIEBJbnB1dCgpIHB1YmxpYyBwbGFjZW1lbnQ6IFBvcG92ZXJQbGFjZW1lbnQgPSBQb3BvdmVyUGxhY2VtZW50LlRvcDtcbiAgQElucHV0KCkgcHVibGljIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHB1YmxpYyBwYXJlbnRDbGFzczogc3RyaW5nO1xuICBASW5wdXQoKSBwdWJsaWMgYW5pbWF0aW9uID0gdHJ1ZTtcbiAgQElucHV0KCkgcHVibGljIGNsb3NlT25DbGlja091dHNpZGUgPSBmYWxzZTtcbiAgQElucHV0KCkgcHVibGljIGNsb3NlT25Nb3VzZU91dHNpZGUgPSBmYWxzZTtcbiAgQElucHV0KCkgcHVibGljIHNpemU6ICdzbWFsbCcgfCAnbWVkaXVtLXNtYWxsJyB8ICdtZWRpdW0nIHwgJ2xhcmdlJyB8ICdhdXRvJyA9ICdzbWFsbCc7XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBQcm9wZXJ0aWVzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgQFZpZXdDaGlsZCgncG9wb3ZlckRpdicpIHB1YmxpYyBwb3BvdmVyRGl2OiBFbGVtZW50UmVmO1xuXG4gIHB1YmxpYyBwb3BvdmVyOiBQb3BvdmVyRGlyZWN0aXZlO1xuICBwdWJsaWMgb25DbG9zZUZyb21PdXRzaWRlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBwdWJsaWMgdG9wID0gLTEwMDAwO1xuICBwdWJsaWMgbGVmdCA9IC0xMDAwMDtcbiAgcHVibGljIGlzSW4gPSBmYWxzZTtcbiAgcHVibGljIGRpc3BsYXlUeXBlID0gJ25vbmUnO1xuICBwdWJsaWMgZWZmZWN0aXZlUGxhY2VtZW50OiBzdHJpbmc7XG4gIHB1YmxpYyBvcGFjaXR5ID0gMDtcbiAgcHVibGljIHRyYW5zaXRpb25FbmFibGVkID0gZmFsc2U7XG5cbiAgcHVibGljIHdpbmRvd1dpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gIHB1YmxpYyB3aW5kb3dIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5cbiAgcHVibGljIGxpc3RlbkNsaWNrRnVuYzogYW55O1xuICBwdWJsaWMgbGlzdGVuTW91c2VGdW5jOiBhbnk7XG4gIHB1YmxpYyBsaXN0ZW5Ub3VjaEZ1bmM6IGFueTtcblxuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIEFub255bW91c1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyoqXG4gICAqIENsb3NlcyBkcm9wZG93biBpZiB1c2VyIGNsaWNrcyBvdXRzaWRlIG9mIHRoaXMgZGlyZWN0aXZlLlxuICAgKi9cbiAgcHVibGljIG9uRG9jdW1lbnRNb3VzZURvd24gPSAoZXZlbnQ6IGFueSkgPT4ge1xuICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuZWxlbWVudC5uYXRpdmVFbGVtZW50O1xuICAgICAgaWYgKCFlbGVtZW50IHx8ICF0aGlzLnBvcG92ZXIpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoZWxlbWVudC5jb250YWlucyhldmVudC50YXJnZXQpIHx8IHRoaXMucG9wb3Zlci5nZXRFbGVtZW50KCkuY29udGFpbnMoZXZlbnQudGFyZ2V0KSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRoaXMub25DbG9zZUZyb21PdXRzaWRlLmVtaXQodW5kZWZpbmVkKTtcbiAgfVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gQ29uc3RydWN0b3JcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBlbGVtZW50OiBFbGVtZW50UmVmLFxuICAgICAgICAgICAgICBwcm90ZWN0ZWQgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICAgICAgICAgICAgcHJvdGVjdGVkIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHtcbiAgfVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gTGlmZWN5Y2xlIGNhbGxiYWNrc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgcHVibGljIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICAgIGlmICh0aGlzLmNsb3NlT25DbGlja091dHNpZGUpIHtcbiAgICAgICAgICB0aGlzLmxpc3RlbkNsaWNrRnVuYyA9IHRoaXMucmVuZGVyZXIubGlzdGVuKCdkb2N1bWVudCcsICdtb3VzZWRvd24nLCAoZXZlbnQ6IGFueSkgPT4gdGhpcy5vbkRvY3VtZW50TW91c2VEb3duKGV2ZW50KSk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5jbG9zZU9uTW91c2VPdXRzaWRlKSB7XG4gICAgICAgICAgdGhpcy5saXN0ZW5Nb3VzZUZ1bmMgPSB0aGlzLnJlbmRlcmVyLmxpc3RlbignZG9jdW1lbnQnLCAnbW91c2VvdmVyJywgKGV2ZW50OiBhbnkpID0+IHRoaXMub25Eb2N1bWVudE1vdXNlRG93bihldmVudCkpO1xuICAgICAgfVxuICAgICAgLy8gQWx3YXlzIGNsb3NlIG9uIG1vYmlsZSB0b3VjaCBldmVudCBvdXRzaWRlLlxuICAgICAgdGhpcy5saXN0ZW5Ub3VjaEZ1bmMgPSB0aGlzLnJlbmRlcmVyLmxpc3RlbignZG9jdW1lbnQnLCAndG91Y2hzdGFydCcsIChldmVudDogYW55KSA9PiB0aGlzLm9uRG9jdW1lbnRNb3VzZURvd24oZXZlbnQpKTtcblxuICAgICAgdGhpcy5zaG93KCk7XG4gICAgICB0aGlzLmNkci5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cblxuICBwdWJsaWMgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgICBpZiAodGhpcy5jbG9zZU9uQ2xpY2tPdXRzaWRlICYmIHRoaXMubGlzdGVuQ2xpY2tGdW5jKSB7XG4gICAgICAgICAgdGhpcy5saXN0ZW5DbGlja0Z1bmMoKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLmNsb3NlT25Nb3VzZU91dHNpZGUgJiYgdGhpcy5saXN0ZW5Nb3VzZUZ1bmMpIHtcbiAgICAgICAgICB0aGlzLmxpc3Rlbk1vdXNlRnVuYygpO1xuICAgICAgfVxuICAgICAgaWYgKCEhdGhpcy5saXN0ZW5Ub3VjaEZ1bmMpIHtcbiAgICAgICAgICB0aGlzLmxpc3RlblRvdWNoRnVuYygpO1xuICAgICAgfVxuICB9XG5cbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBQdWJsaWMgTWV0aG9kc1xuICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgcHVibGljIHVwZGF0ZVBvc2l0aW9uKCk6IHZvaWQge1xuICAgICAgLy8gaWYgdmlzaWJsZSwgcmVwb3NpdGlvblxuICAgICAgaWYgKHRoaXMub3BhY2l0eSkge1xuICAgICAgICAgIGNvbnN0IHAgPSB0aGlzLnBvc2l0aW9uRWxlbWVudHModGhpcy5wb3BvdmVyLmdldEVsZW1lbnQoKSwgdGhpcy5wb3BvdmVyRGl2Lm5hdGl2ZUVsZW1lbnQsIHRoaXMucGxhY2VtZW50KTtcbiAgICAgICAgICB0aGlzLnRvcCA9IHAudG9wO1xuICAgICAgICAgIHRoaXMubGVmdCA9IHAubGVmdDtcbiAgICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBzaG93KCk6IHZvaWQge1xuICAgICAgaWYgKCF0aGlzLnBvcG92ZXIgfHwgIXRoaXMucG9wb3Zlci5nZXRFbGVtZW50KCkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHAgPSB0aGlzLnBvc2l0aW9uRWxlbWVudHModGhpcy5wb3BvdmVyLmdldEVsZW1lbnQoKSwgdGhpcy5wb3BvdmVyRGl2Lm5hdGl2ZUVsZW1lbnQsIHRoaXMucGxhY2VtZW50KTtcbiAgICAgIHRoaXMuZGlzcGxheVR5cGUgPSAnYmxvY2snO1xuICAgICAgdGhpcy50b3AgPSBwLnRvcDtcbiAgICAgIHRoaXMubGVmdCA9IHAubGVmdDtcbiAgICAgIHRoaXMuaXNJbiA9IHRydWU7XG4gICAgICB0aGlzLnRyYW5zaXRpb25FbmFibGVkID0gdHJ1ZTtcbiAgICAgIHRoaXMub3BhY2l0eSA9IDE7XG4gIH1cblxuICBwdWJsaWMgaGlkZSgpOiB2b2lkIHtcbiAgICAgIHRoaXMudG9wID0gLTEwMDAwO1xuICAgICAgdGhpcy5sZWZ0ID0gLTEwMDAwO1xuICAgICAgdGhpcy5pc0luID0gdHJ1ZTtcbiAgICAgIHRoaXMucG9wb3Zlci5oaWRlKCk7XG4gIH1cblxuICBwdWJsaWMgaGlkZUZyb21Qb3BvdmVyKCk6IHZvaWQge1xuICAgICAgdGhpcy50b3AgPSAtMTAwMDA7XG4gICAgICB0aGlzLmxlZnQgPSAtMTAwMDA7XG4gICAgICB0aGlzLmlzSW4gPSB0cnVlO1xuICAgICAgdGhpcy50cmFuc2l0aW9uRW5hYmxlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5vcGFjaXR5ID0gMDtcbiAgfVxuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gUHJvdGVjdGVkIE1ldGhvZHNcbiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIHByb3RlY3RlZCBwb3NpdGlvbkVsZW1lbnRzKGhvc3RFbDogSFRNTEVsZW1lbnQsIHRhcmdldEVsOiBIVE1MRWxlbWVudCwgcG9zaXRpb25TdHI6IFBvcG92ZXJQbGFjZW1lbnQsIGFwcGVuZFRvQm9keTogYm9vbGVhbiA9IGZhbHNlKTogeyB0b3A6IG51bWJlciwgbGVmdDogbnVtYmVyIH0ge1xuICAgICAgY29uc3QgcG9zaXRpb25TdHJQYXJ0cyA9IChwb3NpdGlvblN0ciBhcyBzdHJpbmcpLnNwbGl0KCcgJyk7XG4gICAgICBsZXQgcG9zMCA9IHBvc2l0aW9uU3RyUGFydHNbMF07XG4gICAgICBjb25zdCBwb3MxID0gcG9zaXRpb25TdHJQYXJ0c1sxXSB8fCAnY2VudGVyJztcbiAgICAgIGNvbnN0IGhvc3RFbFBvcyA9IGFwcGVuZFRvQm9keSA/IHRoaXMub2Zmc2V0KGhvc3RFbCkgOiB0aGlzLnBvc2l0aW9uKGhvc3RFbCk7XG4gICAgICBjb25zdCB0YXJnZXRFbFdpZHRoID0gdGFyZ2V0RWwub2Zmc2V0V2lkdGg7XG4gICAgICBjb25zdCB0YXJnZXRFbEhlaWdodCA9IHRhcmdldEVsLm9mZnNldEhlaWdodDtcblxuICAgICAgdGhpcy5lZmZlY3RpdmVQbGFjZW1lbnQgPSBwb3MwID0gdGhpcy5nZXRFZmZlY3RpdmVQbGFjZW1lbnQocG9zMCwgaG9zdEVsLCB0YXJnZXRFbCk7XG5cbiAgICAgIGNvbnN0IHNoaWZ0V2lkdGg6IGFueSA9IHtcbiAgICAgICAgICBjZW50ZXI6IGZ1bmN0aW9uICgpOiBudW1iZXIge1xuICAgICAgICAgICAgICByZXR1cm4gaG9zdEVsUG9zLmxlZnQgKyBob3N0RWxQb3Mud2lkdGggLyAyIC0gdGFyZ2V0RWxXaWR0aCAvIDI7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBsZWZ0OiBmdW5jdGlvbiAoKTogbnVtYmVyIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhvc3RFbFBvcy5sZWZ0O1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcmlnaHQ6IGZ1bmN0aW9uICgpOiBudW1iZXIge1xuICAgICAgICAgICAgICByZXR1cm4gaG9zdEVsUG9zLmxlZnQgKyBob3N0RWxQb3Mud2lkdGg7XG4gICAgICAgICAgfSxcbiAgICAgICAgICB0b3BPckJvdHRvbVJpZ2h0OiBmdW5jdGlvbiAoKTogbnVtYmVyIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhvc3RFbFBvcy5sZWZ0ICsgaG9zdEVsUG9zLndpZHRoIC8gMjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHRvcE9yQm90dG9tTGVmdDogZnVuY3Rpb24gKCk6IG51bWJlciB7XG4gICAgICAgICAgICAgIHJldHVybiBob3N0RWxQb3MubGVmdCAtIHRhcmdldEVsV2lkdGggICsgaG9zdEVsUG9zLndpZHRoIC8gMjtcbiAgICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBjb25zdCBzaGlmdEhlaWdodDogYW55ID0ge1xuICAgICAgICAgIGNlbnRlcjogZnVuY3Rpb24gKCk6IG51bWJlciB7XG4gICAgICAgICAgICAgIHJldHVybiBob3N0RWxQb3MudG9wICsgaG9zdEVsUG9zLmhlaWdodCAvIDIgLSB0YXJnZXRFbEhlaWdodCAvIDI7XG4gICAgICAgICAgfSxcbiAgICAgICAgICB0b3A6IGZ1bmN0aW9uICgpOiBudW1iZXIge1xuICAgICAgICAgICAgICByZXR1cm4gaG9zdEVsUG9zLnRvcDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGJvdHRvbTogZnVuY3Rpb24gKCk6IG51bWJlciB7XG4gICAgICAgICAgICAgIHJldHVybiBob3N0RWxQb3MudG9wICsgaG9zdEVsUG9zLmhlaWdodDtcbiAgICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBsZXQgdGFyZ2V0RWxQb3M6IHsgdG9wOiBudW1iZXIsIGxlZnQ6IG51bWJlciB9O1xuICAgICAgc3dpdGNoIChwb3MwKSB7XG4gICAgICAgICAgY2FzZSBQb3BvdmVyUGxhY2VtZW50LlJpZ2h0OlxuICAgICAgICAgICAgICB0YXJnZXRFbFBvcyA9IHtcbiAgICAgICAgICAgICAgICAgIHRvcDogc2hpZnRIZWlnaHRbcG9zMV0oKSxcbiAgICAgICAgICAgICAgICAgIGxlZnQ6IHNoaWZ0V2lkdGhbcG9zMF0oKVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgUG9wb3ZlclBsYWNlbWVudC5MZWZ0OlxuICAgICAgICAgICAgICB0YXJnZXRFbFBvcyA9IHtcbiAgICAgICAgICAgICAgICAgIHRvcDogc2hpZnRIZWlnaHRbcG9zMV0oKSxcbiAgICAgICAgICAgICAgICAgIGxlZnQ6IGhvc3RFbFBvcy5sZWZ0IC0gdGFyZ2V0RWxXaWR0aFxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgUG9wb3ZlclBsYWNlbWVudC5Cb3R0b206XG4gICAgICAgICAgICAgIHRhcmdldEVsUG9zID0ge1xuICAgICAgICAgICAgICAgICAgdG9wOiBzaGlmdEhlaWdodFtwb3MwXSgpLFxuICAgICAgICAgICAgICAgICAgbGVmdDogc2hpZnRXaWR0aFtwb3MxXSgpXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgUG9wb3ZlclBsYWNlbWVudC5Ub3BMZWZ0OlxuICAgICAgICAgICAgICB0YXJnZXRFbFBvcyA9IHtcbiAgICAgICAgICAgICAgICAgIHRvcDogaG9zdEVsUG9zLnRvcCAtIHRhcmdldEVsSGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgbGVmdDogc2hpZnRXaWR0aFsndG9wT3JCb3R0b21MZWZ0J10oKVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFBvcG92ZXJQbGFjZW1lbnQuVG9wUmlnaHQ6XG4gICAgICAgICAgICAgIHRhcmdldEVsUG9zID0ge1xuICAgICAgICAgICAgICAgICAgdG9wOiBob3N0RWxQb3MudG9wIC0gdGFyZ2V0RWxIZWlnaHQsXG4gICAgICAgICAgICAgICAgICBsZWZ0OiBzaGlmdFdpZHRoWyd0b3BPckJvdHRvbVJpZ2h0J10oKVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFBvcG92ZXJQbGFjZW1lbnQuQm90dG9tTGVmdDpcbiAgICAgICAgICAgICAgdGFyZ2V0RWxQb3MgPSB7XG4gICAgICAgICAgICAgICAgICB0b3A6IHNoaWZ0SGVpZ2h0W1BvcG92ZXJQbGFjZW1lbnQuQm90dG9tXSgpLFxuICAgICAgICAgICAgICAgICAgbGVmdDogc2hpZnRXaWR0aFsndG9wT3JCb3R0b21MZWZ0J10oKVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFBvcG92ZXJQbGFjZW1lbnQuQm90dG9tUmlnaHQ6XG4gICAgICAgICAgICAgIHRhcmdldEVsUG9zID0ge1xuICAgICAgICAgICAgICAgICAgdG9wOiBzaGlmdEhlaWdodFtQb3BvdmVyUGxhY2VtZW50LkJvdHRvbV0oKSxcbiAgICAgICAgICAgICAgICAgIGxlZnQ6IHNoaWZ0V2lkdGhbJ3RvcE9yQm90dG9tUmlnaHQnXSgpXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgdGFyZ2V0RWxQb3MgPSB7XG4gICAgICAgICAgICAgICAgICB0b3A6IGhvc3RFbFBvcy50b3AgLSB0YXJnZXRFbEhlaWdodCxcbiAgICAgICAgICAgICAgICAgIGxlZnQ6IHNoaWZ0V2lkdGhbcG9zMV0oKVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRhcmdldEVsUG9zO1xuICB9XG5cbiAgcHJvdGVjdGVkIHBvc2l0aW9uKG5hdGl2ZUVsOiBIVE1MRWxlbWVudCk6IHsgd2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIsIHRvcDogbnVtYmVyLCBsZWZ0OiBudW1iZXIgfSB7XG4gICAgICBsZXQgb2Zmc2V0UGFyZW50QkNSID0geyB0b3A6IDAsIGxlZnQ6IDAgfTtcbiAgICAgIGNvbnN0IGVsQkNSID0gdGhpcy5vZmZzZXQobmF0aXZlRWwpO1xuICAgICAgY29uc3Qgb2Zmc2V0UGFyZW50RWwgPSB0aGlzLnBhcmVudE9mZnNldEVsKG5hdGl2ZUVsKTtcbiAgICAgIGlmIChvZmZzZXRQYXJlbnRFbCAhPT0gd2luZG93LmRvY3VtZW50KSB7XG4gICAgICAgICAgb2Zmc2V0UGFyZW50QkNSID0gdGhpcy5vZmZzZXQob2Zmc2V0UGFyZW50RWwpO1xuICAgICAgICAgIG9mZnNldFBhcmVudEJDUi50b3AgKz0gb2Zmc2V0UGFyZW50RWwuY2xpZW50VG9wIC0gb2Zmc2V0UGFyZW50RWwuc2Nyb2xsVG9wO1xuICAgICAgICAgIG9mZnNldFBhcmVudEJDUi5sZWZ0ICs9IG9mZnNldFBhcmVudEVsLmNsaWVudExlZnQgLSBvZmZzZXRQYXJlbnRFbC5zY3JvbGxMZWZ0O1xuICAgICAgfVxuXG4gICAgICBjb25zdCBib3VuZGluZ0NsaWVudFJlY3QgPSBuYXRpdmVFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgICAgd2lkdGg6IGJvdW5kaW5nQ2xpZW50UmVjdC53aWR0aCB8fCBuYXRpdmVFbC5vZmZzZXRXaWR0aCxcbiAgICAgICAgICBoZWlnaHQ6IGJvdW5kaW5nQ2xpZW50UmVjdC5oZWlnaHQgfHwgbmF0aXZlRWwub2Zmc2V0SGVpZ2h0LFxuICAgICAgICAgIHRvcDogZWxCQ1IudG9wIC0gb2Zmc2V0UGFyZW50QkNSLnRvcCxcbiAgICAgICAgICBsZWZ0OiBlbEJDUi5sZWZ0IC0gb2Zmc2V0UGFyZW50QkNSLmxlZnRcbiAgICAgIH07XG4gIH1cblxuICBwcm90ZWN0ZWQgb2Zmc2V0KG5hdGl2ZUVsOiBhbnkpOiB7IHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyLCB0b3A6IG51bWJlciwgbGVmdDogbnVtYmVyIH0ge1xuICAgICAgY29uc3QgYm91bmRpbmdDbGllbnRSZWN0ID0gbmF0aXZlRWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAgIHdpZHRoOiBib3VuZGluZ0NsaWVudFJlY3Qud2lkdGggfHwgbmF0aXZlRWwub2Zmc2V0V2lkdGgsXG4gICAgICAgICAgaGVpZ2h0OiBib3VuZGluZ0NsaWVudFJlY3QuaGVpZ2h0IHx8IG5hdGl2ZUVsLm9mZnNldEhlaWdodCxcbiAgICAgICAgICB0b3A6IGJvdW5kaW5nQ2xpZW50UmVjdC50b3AgKyAod2luZG93LnBhZ2VZT2Zmc2V0IHx8IHdpbmRvdy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wKSxcbiAgICAgICAgICBsZWZ0OiBib3VuZGluZ0NsaWVudFJlY3QubGVmdCArICh3aW5kb3cucGFnZVhPZmZzZXQgfHwgd2luZG93LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0KVxuICAgICAgfTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXRTdHlsZShuYXRpdmVFbDogSFRNTEVsZW1lbnQsIGNzc1Byb3A6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgICBpZiAoKG5hdGl2ZUVsIGFzIGFueSkuY3VycmVudFN0eWxlKSB7IC8vIElFXG4gICAgICAgICAgcmV0dXJuIChuYXRpdmVFbCBhcyBhbnkpLmN1cnJlbnRTdHlsZVtjc3NQcm9wXTtcbiAgICAgIH1cblxuICAgICAgaWYgKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKSB7XG4gICAgICAgICAgcmV0dXJuICh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSBhcyBhbnkpKG5hdGl2ZUVsKVtjc3NQcm9wXTtcbiAgICAgIH1cblxuICAgICAgLy8gZmluYWxseSB0cnkgYW5kIGdldCBpbmxpbmUgc3R5bGVcbiAgICAgIHJldHVybiAobmF0aXZlRWwuc3R5bGUgYXMgYW55KVtjc3NQcm9wXTtcbiAgfVxuXG4gIHByb3RlY3RlZCBpc1N0YXRpY1Bvc2l0aW9uZWQobmF0aXZlRWw6IEhUTUxFbGVtZW50KTogYm9vbGVhbiB7XG4gICAgICByZXR1cm4gKHRoaXMuZ2V0U3R5bGUobmF0aXZlRWwsICdwb3NpdGlvbicpIHx8ICdzdGF0aWMnICkgPT09ICdzdGF0aWMnO1xuICB9XG5cbiAgcHJvdGVjdGVkIHBhcmVudE9mZnNldEVsKG5hdGl2ZUVsOiBIVE1MRWxlbWVudCk6IGFueSB7XG4gICAgICBsZXQgb2Zmc2V0UGFyZW50OiBhbnkgPSBuYXRpdmVFbC5vZmZzZXRQYXJlbnQgfHwgd2luZG93LmRvY3VtZW50O1xuICAgICAgd2hpbGUgKG9mZnNldFBhcmVudCAmJiBvZmZzZXRQYXJlbnQgIT09IHdpbmRvdy5kb2N1bWVudCAmJiB0aGlzLmlzU3RhdGljUG9zaXRpb25lZChvZmZzZXRQYXJlbnQpKSB7XG4gICAgICAgICAgb2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50Lm9mZnNldFBhcmVudDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBvZmZzZXRQYXJlbnQgfHwgd2luZG93LmRvY3VtZW50O1xuICB9XG5cbiAgLy8gQ2hlY2sgZm9yIG92ZXJmbG93IG9mIHRoZSB2aWV3cG9ydCBhbmQgcmVmbGVjdCB0aGUgcG9zaXRpb24gaWYgbmVjZXNzYXJ5LlxuICBwcm90ZWN0ZWQgZ2V0RWZmZWN0aXZlUGxhY2VtZW50KHBsYWNlbWVudDogc3RyaW5nLCBob3N0RWxlbWVudDogSFRNTEVsZW1lbnQsIHRhcmdldEVsZW1lbnQ6IEhUTUxFbGVtZW50KTogc3RyaW5nIHtcbiAgICAgIGNvbnN0IGhvc3RFbEJvdW5kaW5nUmVjdCA9IGhvc3RFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG4gICAgICBjb25zdCBkZXNpcmVkUGxhY2VtZW50ID0gcGxhY2VtZW50IHx8IFBvcG92ZXJQbGFjZW1lbnQuVG9wO1xuXG4gICAgICAvLyBSZWZsZWN0IGFwcHJvcHJpYXRlbHkgaWYgb3ZlcmZsb3cuXG4gICAgICBpZiAoZGVzaXJlZFBsYWNlbWVudCA9PT0gUG9wb3ZlclBsYWNlbWVudC5Ub3ApIHtcbiAgICAgICAgICBjb25zdCBpc1RvcE92ZXJmbG93ID0gaG9zdEVsQm91bmRpbmdSZWN0LnRvcCAtIHRhcmdldEVsZW1lbnQub2Zmc2V0SGVpZ2h0IDwgMDtcbiAgICAgICAgICBjb25zdCBpc1JpZ2h0T3ZlcmZsb3cgPSBob3N0RWxCb3VuZGluZ1JlY3QubGVmdCArIGhvc3RFbEJvdW5kaW5nUmVjdC53aWR0aCAvIDIgKyB0YXJnZXRFbGVtZW50Lm9mZnNldFdpZHRoIC8gMiA+IHRoaXMud2luZG93V2lkdGg7XG4gICAgICAgICAgY29uc3QgaXNMZWZ0T3ZlcmZsb3cgPSBob3N0RWxCb3VuZGluZ1JlY3QubGVmdCArIGhvc3RFbEJvdW5kaW5nUmVjdC53aWR0aCAvIDIgLSB0YXJnZXRFbGVtZW50Lm9mZnNldFdpZHRoIC8gMiA8IDA7XG5cbiAgICAgICAgICBpZiAoaXNUb3BPdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Cb3R0b207XG4gICAgICAgICAgfSBlbHNlIGlmIChpc1JpZ2h0T3ZlcmZsb3cpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFBvcG92ZXJQbGFjZW1lbnQuVG9wTGVmdDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzTGVmdE92ZXJmbG93KSB7XG4gICAgICAgICAgICAgIHJldHVybiBQb3BvdmVyUGxhY2VtZW50LlRvcFJpZ2h0O1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChkZXNpcmVkUGxhY2VtZW50ID09PSBQb3BvdmVyUGxhY2VtZW50LkJvdHRvbSkge1xuICAgICAgICAgIGNvbnN0IGlzUmlnaHRPdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC5sZWZ0ICsgaG9zdEVsQm91bmRpbmdSZWN0LndpZHRoIC8gMiArIHRhcmdldEVsZW1lbnQub2Zmc2V0V2lkdGggLyAyID4gdGhpcy53aW5kb3dXaWR0aDtcbiAgICAgICAgICBjb25zdCBpc0xlZnRPdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC5sZWZ0ICsgaG9zdEVsQm91bmRpbmdSZWN0LndpZHRoIC8gMiAtIHRhcmdldEVsZW1lbnQub2Zmc2V0V2lkdGggLyAyIDwgMDtcbiAgICAgICAgICBjb25zdCBpc0JvdHRvbU92ZXJmbG93ID0gaG9zdEVsQm91bmRpbmdSZWN0LmJvdHRvbSArIHRhcmdldEVsZW1lbnQub2Zmc2V0SGVpZ2h0ID4gdGhpcy53aW5kb3dIZWlnaHQ7XG5cbiAgICAgICAgICBpZiAoaXNCb3R0b21PdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Ub3A7XG4gICAgICAgICAgfSBlbHNlIGlmIChpc1JpZ2h0T3ZlcmZsb3cpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFBvcG92ZXJQbGFjZW1lbnQuQm90dG9tTGVmdDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzTGVmdE92ZXJmbG93KSB7XG4gICAgICAgICAgICAgIHJldHVybiBQb3BvdmVyUGxhY2VtZW50LkJvdHRvbVJpZ2h0O1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChkZXNpcmVkUGxhY2VtZW50ID09PSBQb3BvdmVyUGxhY2VtZW50LkxlZnQpIHtcbiAgICAgICAgICBjb25zdCBpc1RvcE92ZXJmbG93ID0gaG9zdEVsQm91bmRpbmdSZWN0LnRvcCArIGhvc3RFbEJvdW5kaW5nUmVjdC5oZWlnaHQgLyAyIC0gdGFyZ2V0RWxlbWVudC5vZmZzZXRIZWlnaHQgLyAyIDwgMDtcbiAgICAgICAgICBjb25zdCBpc0xlZnRPdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC5sZWZ0IC0gdGFyZ2V0RWxlbWVudC5vZmZzZXRXaWR0aCA8IDA7XG4gICAgICAgICAgY29uc3QgaXNCb3R0b21PdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC50b3AgKyBob3N0RWxCb3VuZGluZ1JlY3QuaGVpZ2h0IC8gMiArIHRhcmdldEVsZW1lbnQub2Zmc2V0SGVpZ2h0IC8gMiA+IHRoaXMud2luZG93SGVpZ2h0O1xuXG4gICAgICAgICAgaWYgKGlzTGVmdE92ZXJmbG93KSB7XG4gICAgICAgICAgICAgIHJldHVybiBQb3BvdmVyUGxhY2VtZW50LlJpZ2h0O1xuICAgICAgICAgIH0gZWxzZSBpZiAoaXNUb3BPdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Cb3R0b21MZWZ0O1xuICAgICAgICAgIH0gZWxzZSBpZiAoaXNCb3R0b21PdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Ub3BMZWZ0O1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChkZXNpcmVkUGxhY2VtZW50ID09PSBQb3BvdmVyUGxhY2VtZW50LlJpZ2h0KSB7XG4gICAgICAgICAgY29uc3QgaXNUb3BPdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC50b3AgKyBob3N0RWxCb3VuZGluZ1JlY3QuaGVpZ2h0IC8gMiAtIHRhcmdldEVsZW1lbnQub2Zmc2V0SGVpZ2h0IC8gMiA8IDA7XG4gICAgICAgICAgY29uc3QgaXNSaWdodE92ZXJmbG93ID0gaG9zdEVsQm91bmRpbmdSZWN0LnJpZ2h0ICsgdGFyZ2V0RWxlbWVudC5vZmZzZXRXaWR0aCA+IHRoaXMud2luZG93V2lkdGg7XG4gICAgICAgICAgY29uc3QgaXNCb3R0b21PdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC50b3AgKyBob3N0RWxCb3VuZGluZ1JlY3QuaGVpZ2h0IC8gMiArIHRhcmdldEVsZW1lbnQub2Zmc2V0SGVpZ2h0IC8gMiA+IHRoaXMud2luZG93SGVpZ2h0O1xuXG4gICAgICAgICAgaWYgKGlzUmlnaHRPdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5MZWZ0O1xuICAgICAgICAgIH0gZWxzZSBpZiAoaXNUb3BPdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Cb3R0b21SaWdodDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzQm90dG9tT3ZlcmZsb3cpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFBvcG92ZXJQbGFjZW1lbnQuVG9wUmlnaHQ7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGRlc2lyZWRQbGFjZW1lbnQgPT09IFBvcG92ZXJQbGFjZW1lbnQuVG9wUmlnaHQpIHtcbiAgICAgICAgICBjb25zdCBpc1RvcE92ZXJmbG93ID0gaG9zdEVsQm91bmRpbmdSZWN0LnRvcCAtIHRhcmdldEVsZW1lbnQub2Zmc2V0SGVpZ2h0IDwgMDtcbiAgICAgICAgICBjb25zdCBpc1JpZ2h0T3ZlcmZsb3cgPSBob3N0RWxCb3VuZGluZ1JlY3QucmlnaHQgKyB0YXJnZXRFbGVtZW50Lm9mZnNldFdpZHRoID4gdGhpcy53aW5kb3dXaWR0aDtcblxuICAgICAgICAgIGlmIChpc1RvcE92ZXJmbG93ICYmIGlzUmlnaHRPdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Cb3R0b21MZWZ0O1xuICAgICAgICAgIH0gZWxzZSBpZiAoaXNUb3BPdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Cb3R0b21SaWdodDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzUmlnaHRPdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Ub3BMZWZ0O1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChkZXNpcmVkUGxhY2VtZW50ID09PSBQb3BvdmVyUGxhY2VtZW50LlRvcExlZnQpIHtcbiAgICAgICAgICBjb25zdCBpc1RvcE92ZXJmbG93ID0gaG9zdEVsQm91bmRpbmdSZWN0LnRvcCAtIHRhcmdldEVsZW1lbnQub2Zmc2V0SGVpZ2h0IDwgMDtcbiAgICAgICAgICBjb25zdCBpc0xlZnRPdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC5sZWZ0IC0gdGFyZ2V0RWxlbWVudC5vZmZzZXRXaWR0aCA8IDA7XG5cbiAgICAgICAgICBpZiAoaXNUb3BPdmVyZmxvdyAmJiBpc0xlZnRPdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Cb3R0b21SaWdodDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzVG9wT3ZlcmZsb3cpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFBvcG92ZXJQbGFjZW1lbnQuQm90dG9tTGVmdDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzTGVmdE92ZXJmbG93KSB7XG4gICAgICAgICAgICAgIHJldHVybiBQb3BvdmVyUGxhY2VtZW50LlRvcFJpZ2h0O1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChkZXNpcmVkUGxhY2VtZW50ID09PSBQb3BvdmVyUGxhY2VtZW50LkJvdHRvbVJpZ2h0KSB7XG4gICAgICAgICAgY29uc3QgaXNCb3R0b21PdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC5ib3R0b20gKyB0YXJnZXRFbGVtZW50Lm9mZnNldEhlaWdodCA+IHRoaXMud2luZG93SGVpZ2h0O1xuICAgICAgICAgIGNvbnN0IGlzUmlnaHRPdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC5yaWdodCArIHRhcmdldEVsZW1lbnQub2Zmc2V0V2lkdGggPiB0aGlzLndpbmRvd1dpZHRoO1xuXG4gICAgICAgICAgaWYgKGlzQm90dG9tT3ZlcmZsb3cgJiYgaXNSaWdodE92ZXJmbG93KSB7XG4gICAgICAgICAgICAgIHJldHVybiBQb3BvdmVyUGxhY2VtZW50LlRvcExlZnQ7XG4gICAgICAgICAgfSBlbHNlIGlmIChpc0JvdHRvbU92ZXJmbG93KSB7XG4gICAgICAgICAgICAgIHJldHVybiBQb3BvdmVyUGxhY2VtZW50LlRvcFJpZ2h0O1xuICAgICAgICAgIH0gZWxzZSBpZiAoaXNSaWdodE92ZXJmbG93KSB7XG4gICAgICAgICAgICAgIHJldHVybiBQb3BvdmVyUGxhY2VtZW50LkJvdHRvbUxlZnQ7XG4gICAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGRlc2lyZWRQbGFjZW1lbnQgPT09IFBvcG92ZXJQbGFjZW1lbnQuQm90dG9tTGVmdCkge1xuICAgICAgICAgIGNvbnN0IGlzQm90dG9tT3ZlcmZsb3cgPSBob3N0RWxCb3VuZGluZ1JlY3QuYm90dG9tICsgdGFyZ2V0RWxlbWVudC5vZmZzZXRIZWlnaHQgPiB0aGlzLndpbmRvd0hlaWdodDtcbiAgICAgICAgICBjb25zdCBpc0xlZnRPdmVyZmxvdyA9IGhvc3RFbEJvdW5kaW5nUmVjdC5sZWZ0IC0gdGFyZ2V0RWxlbWVudC5vZmZzZXRXaWR0aCA8IDA7XG5cbiAgICAgICAgICBpZiAoaXNCb3R0b21PdmVyZmxvdyAmJiBpc0xlZnRPdmVyZmxvdykge1xuICAgICAgICAgICAgICByZXR1cm4gUG9wb3ZlclBsYWNlbWVudC5Ub3BSaWdodDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzQm90dG9tT3ZlcmZsb3cpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIFBvcG92ZXJQbGFjZW1lbnQuVG9wTGVmdDtcbiAgICAgICAgICB9IGVsc2UgaWYgKGlzTGVmdE92ZXJmbG93KSB7XG4gICAgICAgICAgICAgIHJldHVybiBQb3BvdmVyUGxhY2VtZW50LkJvdHRvbVJpZ2h0O1xuICAgICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRlc2lyZWRQbGFjZW1lbnQ7XG4gIH1cbn1cbiJdfQ==
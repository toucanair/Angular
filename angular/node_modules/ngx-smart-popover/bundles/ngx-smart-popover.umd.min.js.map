{"version":3,"sources":["ng://ngx-smart-popover/lib/popover.placement.ts","ng://ngx-smart-popover/lib/popover-content.component.ts","ng://ngx-smart-popover/lib/popover.directive.ts","ng://ngx-smart-popover/lib/popover.module.ts"],"names":["PopoverPlacement","Bottom","BottomLeft","BottomRight","Left","Right","Top","TopLeft","TopRight","PopoverContentComponent","element","cdr","renderer","_this","this","placement","animation","closeOnClickOutside","closeOnMouseOutside","size","onCloseFromOutside","EventEmitter","top","left","isIn","displayType","opacity","transitionEnabled","windowWidth","window","innerWidth","windowHeight","innerHeight","onDocumentMouseDown","event","nativeElement","popover","contains","target","getElement","emit","undefined","prototype","ngAfterViewInit","listenClickFunc","listen","listenMouseFunc","listenTouchFunc","show","detectChanges","ngOnDestroy","updatePosition","p","positionElements","popoverDiv","hide","hideFromPopover","hostEl","targetEl","positionStr","appendToBody","positionStrParts","split","pos0","pos1","hostElPos","offset","position","targetElWidth","offsetWidth","targetElHeight","offsetHeight","effectivePlacement","getEffectivePlacement","targetElPos","shiftWidth","center","width","right","topOrBottomRight","topOrBottomLeft","shiftHeight","height","bottom","nativeEl","offsetParentBCR","elBCR","offsetParentEl","parentOffsetEl","document","clientTop","scrollTop","clientLeft","scrollLeft","boundingClientRect","getBoundingClientRect","pageYOffset","documentElement","pageXOffset","getStyle","cssProp","currentStyle","getComputedStyle","isStaticPositioned","offsetParent","hostElement","targetElement","hostElBoundingRect","desiredPlacement","isTopOverflow","isRightOverflow","isLeftOverflow","isBottomOverflow","Component","args","selector","template","ElementRef","ChangeDetectorRef","Renderer2","Input","ViewChild","PopoverDirective","viewContainerRef","resolver","popoverContentComponent","popoverOnHover","popoverDismissTimeout","onShown","onHidden","showOrHideOnClick","evt","popoverDisabled","stopImmediatePropagation","toggle","showOrHideOnTouch","showOnHover","hideOnHover","popoverCloseOnMouseOutside","ngOnChanges","changes","currentValue","visible","content","factory","resolveComponentFactory","createComponent","popoverPlacement","popoverAnimation","popoverTitle","title","popoverCloseOnClickOutside","popoverSize","subscribe","setTimeout","destroy","Directive","exportAs","ViewContainerRef","ComponentFactoryResolver","Output","HostListener","type","PopoverModule","NgModule","declarations","imports","CommonModule","exports","entryComponents"],"mappings":"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","sourcesContent":["export class PopoverPlacement {\n    public static readonly Bottom = 'bottom';\n    public static readonly BottomLeft = 'bottom-left';\n    public static readonly BottomRight = 'bottom-right';\n    public static readonly Left = 'left';\n    public static readonly Right = 'right';\n    public static readonly Top = 'top';\n    public static readonly TopLeft = 'top-left';\n    public static readonly TopRight = 'top-right';\n}\n","/**\n * This is a continuation of ngx-popover\n * @Reference {github} https://github.com/pleerock/ngx-popover\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverPlacement } from './popover.placement';\n\n@Component({\n  selector: 'popover-content',\n  template: `\n    <div #popoverDiv\n        class=\"bs-popover-{{ effectivePlacement }} popover-content popover {{ parentClass }}\"\n        [ngClass]=\"{\n            'sm': size === 'small',\n            'md-sm': size === 'medium-small',\n            'md': size === 'medium',\n            'lg': size === 'large'\n        }\"\n        [style.top.px]=\"top\"\n        [style.left.px]=\"left\"\n        [style.transition]=\"(transitionEnabled ? '0.15s opacity' : '')\"\n        [style.opacity]=\"opacity\"\n        [style.display]=\"'block'\"\n        [class.in]=\"isIn\"\n        role=\"popover\">\n            <div [hidden]=\"!closeOnMouseOutside\" class=\"virtual-area\"></div>\n            <div class=\"arrow\"></div>\n            <div class=\"popover-header\" [hidden]=\"!title\">{{ title }}</div>\n            <div class=\"popover-body\">\n                <ng-content></ng-content>\n                {{ content }}\n            </div>\n    </div>\n    `\n})\nexport class PopoverContentComponent implements AfterViewInit, OnDestroy {\n  // -------------------------------------------------------------------------\n  // Inputs / Outputs\n  // -------------------------------------------------------------------------\n  @Input() public content: string;\n  @Input() public placement: PopoverPlacement = PopoverPlacement.Top;\n  @Input() public title: string;\n  @Input() public parentClass: string;\n  @Input() public animation = true;\n  @Input() public closeOnClickOutside = false;\n  @Input() public closeOnMouseOutside = false;\n  @Input() public size: 'small' | 'medium-small' | 'medium' | 'large' | 'auto' = 'small';\n\n  // -------------------------------------------------------------------------\n  // Properties\n  // -------------------------------------------------------------------------\n  @ViewChild('popoverDiv') public popoverDiv: ElementRef;\n\n  public popover: PopoverDirective;\n  public onCloseFromOutside = new EventEmitter();\n  public top = -10000;\n  public left = -10000;\n  public isIn = false;\n  public displayType = 'none';\n  public effectivePlacement: string;\n  public opacity = 0;\n  public transitionEnabled = false;\n\n  public windowWidth = window.innerWidth;\n  public windowHeight = window.innerHeight;\n\n  public listenClickFunc: any;\n  public listenMouseFunc: any;\n  public listenTouchFunc: any;\n\n  // -------------------------------------------------------------------------\n  // Anonymous\n  // -------------------------------------------------------------------------\n\n  /**\n   * Closes dropdown if user clicks outside of this directive.\n   */\n  public onDocumentMouseDown = (event: any) => {\n      const element = this.element.nativeElement;\n      if (!element || !this.popover) {\n          return;\n      }\n      if (element.contains(event.target) || this.popover.getElement().contains(event.target)) {\n          return;\n      }\n      this.onCloseFromOutside.emit(undefined);\n  }\n\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n\n  constructor(protected element: ElementRef,\n              protected cdr: ChangeDetectorRef,\n              protected renderer: Renderer2) {\n  }\n\n  // -------------------------------------------------------------------------\n  // Lifecycle callbacks\n  // -------------------------------------------------------------------------\n\n  public ngAfterViewInit(): void {\n      if (this.closeOnClickOutside) {\n          this.listenClickFunc = this.renderer.listen('document', 'mousedown', (event: any) => this.onDocumentMouseDown(event));\n      }\n      if (this.closeOnMouseOutside) {\n          this.listenMouseFunc = this.renderer.listen('document', 'mouseover', (event: any) => this.onDocumentMouseDown(event));\n      }\n      // Always close on mobile touch event outside.\n      this.listenTouchFunc = this.renderer.listen('document', 'touchstart', (event: any) => this.onDocumentMouseDown(event));\n\n      this.show();\n      this.cdr.detectChanges();\n  }\n\n  public ngOnDestroy(): void {\n      if (this.closeOnClickOutside && this.listenClickFunc) {\n          this.listenClickFunc();\n      }\n      if (this.closeOnMouseOutside && this.listenMouseFunc) {\n          this.listenMouseFunc();\n      }\n      if (!!this.listenTouchFunc) {\n          this.listenTouchFunc();\n      }\n  }\n\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  public updatePosition(): void {\n      // if visible, reposition\n      if (this.opacity) {\n          const p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement);\n          this.top = p.top;\n          this.left = p.left;\n      }\n  }\n\n  public show(): void {\n      if (!this.popover || !this.popover.getElement()) {\n          return;\n      }\n\n      const p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement);\n      this.displayType = 'block';\n      this.top = p.top;\n      this.left = p.left;\n      this.isIn = true;\n      this.transitionEnabled = true;\n      this.opacity = 1;\n  }\n\n  public hide(): void {\n      this.top = -10000;\n      this.left = -10000;\n      this.isIn = true;\n      this.popover.hide();\n  }\n\n  public hideFromPopover(): void {\n      this.top = -10000;\n      this.left = -10000;\n      this.isIn = true;\n      this.transitionEnabled = false;\n      this.opacity = 0;\n  }\n\n  // -------------------------------------------------------------------------\n  // Protected Methods\n  // -------------------------------------------------------------------------\n\n  protected positionElements(hostEl: HTMLElement, targetEl: HTMLElement, positionStr: PopoverPlacement, appendToBody: boolean = false): { top: number, left: number } {\n      const positionStrParts = (positionStr as string).split(' ');\n      let pos0 = positionStrParts[0];\n      const pos1 = positionStrParts[1] || 'center';\n      const hostElPos = appendToBody ? this.offset(hostEl) : this.position(hostEl);\n      const targetElWidth = targetEl.offsetWidth;\n      const targetElHeight = targetEl.offsetHeight;\n\n      this.effectivePlacement = pos0 = this.getEffectivePlacement(pos0, hostEl, targetEl);\n\n      const shiftWidth: any = {\n          center: function (): number {\n              return hostElPos.left + hostElPos.width / 2 - targetElWidth / 2;\n          },\n          left: function (): number {\n              return hostElPos.left;\n          },\n          right: function (): number {\n              return hostElPos.left + hostElPos.width;\n          },\n          topOrBottomRight: function (): number {\n              return hostElPos.left + hostElPos.width / 2;\n          },\n          topOrBottomLeft: function (): number {\n              return hostElPos.left - targetElWidth  + hostElPos.width / 2;\n          }\n      };\n\n      const shiftHeight: any = {\n          center: function (): number {\n              return hostElPos.top + hostElPos.height / 2 - targetElHeight / 2;\n          },\n          top: function (): number {\n              return hostElPos.top;\n          },\n          bottom: function (): number {\n              return hostElPos.top + hostElPos.height;\n          }\n      };\n\n      let targetElPos: { top: number, left: number };\n      switch (pos0) {\n          case PopoverPlacement.Right:\n              targetElPos = {\n                  top: shiftHeight[pos1](),\n                  left: shiftWidth[pos0]()\n              };\n              break;\n\n          case PopoverPlacement.Left:\n              targetElPos = {\n                  top: shiftHeight[pos1](),\n                  left: hostElPos.left - targetElWidth\n              };\n              break;\n\n          case PopoverPlacement.Bottom:\n              targetElPos = {\n                  top: shiftHeight[pos0](),\n                  left: shiftWidth[pos1]()\n              };\n              break;\n          case PopoverPlacement.TopLeft:\n              targetElPos = {\n                  top: hostElPos.top - targetElHeight,\n                  left: shiftWidth['topOrBottomLeft']()\n              };\n              break;\n          case PopoverPlacement.TopRight:\n              targetElPos = {\n                  top: hostElPos.top - targetElHeight,\n                  left: shiftWidth['topOrBottomRight']()\n              };\n              break;\n          case PopoverPlacement.BottomLeft:\n              targetElPos = {\n                  top: shiftHeight[PopoverPlacement.Bottom](),\n                  left: shiftWidth['topOrBottomLeft']()\n              };\n              break;\n          case PopoverPlacement.BottomRight:\n              targetElPos = {\n                  top: shiftHeight[PopoverPlacement.Bottom](),\n                  left: shiftWidth['topOrBottomRight']()\n              };\n              break;\n\n          default:\n              targetElPos = {\n                  top: hostElPos.top - targetElHeight,\n                  left: shiftWidth[pos1]()\n              };\n              break;\n      }\n\n      return targetElPos;\n  }\n\n  protected position(nativeEl: HTMLElement): { width: number, height: number, top: number, left: number } {\n      let offsetParentBCR = { top: 0, left: 0 };\n      const elBCR = this.offset(nativeEl);\n      const offsetParentEl = this.parentOffsetEl(nativeEl);\n      if (offsetParentEl !== window.document) {\n          offsetParentBCR = this.offset(offsetParentEl);\n          offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n          offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n      }\n\n      const boundingClientRect = nativeEl.getBoundingClientRect();\n      return {\n          width: boundingClientRect.width || nativeEl.offsetWidth,\n          height: boundingClientRect.height || nativeEl.offsetHeight,\n          top: elBCR.top - offsetParentBCR.top,\n          left: elBCR.left - offsetParentBCR.left\n      };\n  }\n\n  protected offset(nativeEl: any): { width: number, height: number, top: number, left: number } {\n      const boundingClientRect = nativeEl.getBoundingClientRect();\n      return {\n          width: boundingClientRect.width || nativeEl.offsetWidth,\n          height: boundingClientRect.height || nativeEl.offsetHeight,\n          top: boundingClientRect.top + (window.pageYOffset || window.document.documentElement.scrollTop),\n          left: boundingClientRect.left + (window.pageXOffset || window.document.documentElement.scrollLeft)\n      };\n  }\n\n  protected getStyle(nativeEl: HTMLElement, cssProp: string): string {\n      if ((nativeEl as any).currentStyle) { // IE\n          return (nativeEl as any).currentStyle[cssProp];\n      }\n\n      if (window.getComputedStyle) {\n          return (window.getComputedStyle as any)(nativeEl)[cssProp];\n      }\n\n      // finally try and get inline style\n      return (nativeEl.style as any)[cssProp];\n  }\n\n  protected isStaticPositioned(nativeEl: HTMLElement): boolean {\n      return (this.getStyle(nativeEl, 'position') || 'static' ) === 'static';\n  }\n\n  protected parentOffsetEl(nativeEl: HTMLElement): any {\n      let offsetParent: any = nativeEl.offsetParent || window.document;\n      while (offsetParent && offsetParent !== window.document && this.isStaticPositioned(offsetParent)) {\n          offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || window.document;\n  }\n\n  // Check for overflow of the viewport and reflect the position if necessary.\n  protected getEffectivePlacement(placement: string, hostElement: HTMLElement, targetElement: HTMLElement): string {\n      const hostElBoundingRect = hostElement.getBoundingClientRect();\n\n      const desiredPlacement = placement || PopoverPlacement.Top;\n\n      // Reflect appropriately if overflow.\n      if (desiredPlacement === PopoverPlacement.Top) {\n          const isTopOverflow = hostElBoundingRect.top - targetElement.offsetHeight < 0;\n          const isRightOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 + targetElement.offsetWidth / 2 > this.windowWidth;\n          const isLeftOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 - targetElement.offsetWidth / 2 < 0;\n\n          if (isTopOverflow) {\n              return PopoverPlacement.Bottom;\n          } else if (isRightOverflow) {\n              return PopoverPlacement.TopLeft;\n          } else if (isLeftOverflow) {\n              return PopoverPlacement.TopRight;\n          }\n      }\n      if (desiredPlacement === PopoverPlacement.Bottom) {\n          const isRightOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 + targetElement.offsetWidth / 2 > this.windowWidth;\n          const isLeftOverflow = hostElBoundingRect.left + hostElBoundingRect.width / 2 - targetElement.offsetWidth / 2 < 0;\n          const isBottomOverflow = hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight;\n\n          if (isBottomOverflow) {\n              return PopoverPlacement.Top;\n          } else if (isRightOverflow) {\n              return PopoverPlacement.BottomLeft;\n          } else if (isLeftOverflow) {\n              return PopoverPlacement.BottomRight;\n          }\n      }\n      if (desiredPlacement === PopoverPlacement.Left) {\n          const isTopOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 - targetElement.offsetHeight / 2 < 0;\n          const isLeftOverflow = hostElBoundingRect.left - targetElement.offsetWidth < 0;\n          const isBottomOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 + targetElement.offsetHeight / 2 > this.windowHeight;\n\n          if (isLeftOverflow) {\n              return PopoverPlacement.Right;\n          } else if (isTopOverflow) {\n              return PopoverPlacement.BottomLeft;\n          } else if (isBottomOverflow) {\n              return PopoverPlacement.TopLeft;\n          }\n      }\n      if (desiredPlacement === PopoverPlacement.Right) {\n          const isTopOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 - targetElement.offsetHeight / 2 < 0;\n          const isRightOverflow = hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth;\n          const isBottomOverflow = hostElBoundingRect.top + hostElBoundingRect.height / 2 + targetElement.offsetHeight / 2 > this.windowHeight;\n\n          if (isRightOverflow) {\n              return PopoverPlacement.Left;\n          } else if (isTopOverflow) {\n              return PopoverPlacement.BottomRight;\n          } else if (isBottomOverflow) {\n              return PopoverPlacement.TopRight;\n          }\n      }\n      if (desiredPlacement === PopoverPlacement.TopRight) {\n          const isTopOverflow = hostElBoundingRect.top - targetElement.offsetHeight < 0;\n          const isRightOverflow = hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth;\n\n          if (isTopOverflow && isRightOverflow) {\n              return PopoverPlacement.BottomLeft;\n          } else if (isTopOverflow) {\n              return PopoverPlacement.BottomRight;\n          } else if (isRightOverflow) {\n              return PopoverPlacement.TopLeft;\n          }\n      }\n      if (desiredPlacement === PopoverPlacement.TopLeft) {\n          const isTopOverflow = hostElBoundingRect.top - targetElement.offsetHeight < 0;\n          const isLeftOverflow = hostElBoundingRect.left - targetElement.offsetWidth < 0;\n\n          if (isTopOverflow && isLeftOverflow) {\n              return PopoverPlacement.BottomRight;\n          } else if (isTopOverflow) {\n              return PopoverPlacement.BottomLeft;\n          } else if (isLeftOverflow) {\n              return PopoverPlacement.TopRight;\n          }\n      }\n      if (desiredPlacement === PopoverPlacement.BottomRight) {\n          const isBottomOverflow = hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight;\n          const isRightOverflow = hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth;\n\n          if (isBottomOverflow && isRightOverflow) {\n              return PopoverPlacement.TopLeft;\n          } else if (isBottomOverflow) {\n              return PopoverPlacement.TopRight;\n          } else if (isRightOverflow) {\n              return PopoverPlacement.BottomLeft;\n          }\n      }\n      if (desiredPlacement === PopoverPlacement.BottomLeft) {\n          const isBottomOverflow = hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight;\n          const isLeftOverflow = hostElBoundingRect.left - targetElement.offsetWidth < 0;\n\n          if (isBottomOverflow && isLeftOverflow) {\n              return PopoverPlacement.TopRight;\n          } else if (isBottomOverflow) {\n              return PopoverPlacement.TopLeft;\n          } else if (isLeftOverflow) {\n              return PopoverPlacement.BottomRight;\n          }\n      }\n\n      return desiredPlacement;\n  }\n}\n","/**\n * This is a continuation of ngx-popover\n * @Reference {github} https://github.com/pleerock/ngx-popover\n */\n\nimport {\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChange,\n    ViewContainerRef\n} from '@angular/core';\nimport { PopoverContentComponent } from './popover-content.component';\nimport { PopoverPlacement } from './popover.placement';\n\n\n/**\n* @group Basic Toolkit\n* @component Popover Directive\n*/\n@Directive({\n    selector: '[popover]',\n    exportAs: 'popover'\n})\nexport class PopoverDirective implements OnChanges {\n    // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n    protected popoverContentComponent = PopoverContentComponent;\n    protected popover: ComponentRef<PopoverContentComponent>;\n    protected visible: boolean;\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(protected viewContainerRef: ViewContainerRef,\n        protected resolver: ComponentFactoryResolver) {\n    }\n\n    // -------------------------------------------------------------------------\n    // Inputs / Outputs\n    // -------------------------------------------------------------------------\n    @Input('popover') public content: string | PopoverContentComponent;\n    @Input() public popoverSize: 'small' | 'medium-small' | 'medium' | 'large' | 'auto';\n    @Input() public popoverDisabled: boolean;\n    @Input() public popoverAnimation: boolean;\n    @Input() public popoverPlacement: PopoverPlacement;\n    @Input() public popoverTitle: string;\n    @Input() public popoverOnHover = true;\n    @Input() public popoverCloseOnClickOutside: boolean;\n    @Input() public popoverCloseOnMouseOutside: boolean;\n    @Input() public popoverDismissTimeout = 0;\n    @Output() public onShown = new EventEmitter<PopoverDirective>();\n    @Output() public onHidden = new EventEmitter<PopoverDirective>();\n\n    // -------------------------------------------------------------------------\n    // Event listeners\n    // -------------------------------------------------------------------------\n    @HostListener('click', ['$event'])\n    public showOrHideOnClick(evt: Event): void {\n        if (this.popoverOnHover) {\n            return;\n        }\n        if (this.popoverDisabled) {\n            return;\n        }\n        evt.stopImmediatePropagation();\n        this.toggle();\n    }\n\n    @HostListener('touchend', ['$event'])\n    public showOrHideOnTouch(evt: Event): void {\n        evt.stopImmediatePropagation();\n        if (!this.popoverOnHover) {\n            return;\n        }\n        if (this.popoverDisabled) {\n            return;\n        }\n        this.toggle();\n    }\n\n    @HostListener('focusin')\n    @HostListener('mouseenter')\n    public showOnHover(): void {\n        if (!this.popoverOnHover) {\n            return;\n        }\n        if (this.popoverDisabled) {\n            return;\n        }\n        this.show();\n    }\n\n    @HostListener('focusout')\n    @HostListener('mouseleave')\n    public hideOnHover(): void {\n        if (this.popoverCloseOnMouseOutside) {\n            return; // don't do anything since we do not control this\n        }\n        if (!this.popoverOnHover) {\n            return;\n        }\n        if (this.popoverDisabled) {\n            return;\n        }\n        this.hide();\n    }\n\n    public ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['popoverDisabled']) {\n            if (changes['popoverDisabled'].currentValue) {\n                this.hide();\n            }\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    public toggle(): void {\n        if (!this.visible) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    }\n\n    public show(): void {\n        if (this.visible) {\n            return;\n        }\n\n        this.visible = true;\n        if (typeof this.content === 'string') {\n            const factory = this.resolver.resolveComponentFactory(this.popoverContentComponent);\n            if (!this.visible) {\n                return;\n            }\n\n            this.popover = this.viewContainerRef.createComponent(factory);\n            const popover = this.popover.instance as PopoverContentComponent;\n            popover.popover = this;\n            popover.content = this.content as string;\n            if (this.popoverPlacement !== undefined) {\n                popover.placement = this.popoverPlacement;\n            }\n            if (this.popoverAnimation !== undefined) {\n                popover.animation = this.popoverAnimation;\n            }\n            if (this.popoverTitle !== undefined) {\n                popover.title = this.popoverTitle;\n            }\n            if (this.popoverCloseOnClickOutside !== undefined) {\n                popover.closeOnClickOutside = this.popoverCloseOnClickOutside;\n            }\n            if (this.popoverCloseOnMouseOutside !== undefined) {\n                popover.closeOnMouseOutside = this.popoverCloseOnMouseOutside;\n            }\n            if (this.popoverSize) {\n                popover.size = this.popoverSize;\n            }\n\n            popover.onCloseFromOutside.subscribe(() => this.hide());\n            // if dismissTimeout option is set, then this popover will be dismissed in dismissTimeout time\n            if (this.popoverDismissTimeout > 0) {\n                setTimeout(() => this.hide(), this.popoverDismissTimeout);\n            }\n        } else {\n            const popover = this.content as PopoverContentComponent;\n            popover.popover = this;\n            if (this.popoverPlacement !== undefined) {\n                popover.placement = this.popoverPlacement;\n            }\n            if (this.popoverAnimation !== undefined) {\n                popover.animation = this.popoverAnimation;\n            }\n            if (this.popoverTitle !== undefined) {\n                popover.title = this.popoverTitle;\n            }\n            if (this.popoverCloseOnClickOutside !== undefined) {\n                popover.closeOnClickOutside = this.popoverCloseOnClickOutside;\n            }\n            if (this.popoverCloseOnMouseOutside !== undefined) {\n                popover.closeOnMouseOutside = this.popoverCloseOnMouseOutside;\n            }\n            if (this.popoverSize) {\n                popover.size = this.popoverSize;\n            }\n\n            popover.onCloseFromOutside.subscribe(() => this.hide());\n            // if dismissTimeout option is set, then this popover will be dismissed in dismissTimeout time\n            if (this.popoverDismissTimeout > 0) {\n                setTimeout(() => this.hide(), this.popoverDismissTimeout);\n            }\n            popover.show();\n        }\n\n        this.onShown.emit(this);\n    }\n\n    public hide(): void {\n        if (!this.visible) {\n            return;\n        }\n\n        this.visible = false;\n        if (this.popover) {\n            this.popover.destroy();\n        }\n\n        if (this.content instanceof PopoverContentComponent) {\n            (this.content as PopoverContentComponent).hideFromPopover();\n        }\n\n        this.onHidden.emit(this);\n    }\n\n    public getElement(): HTMLElement {\n        return this.viewContainerRef.element.nativeElement;\n    }\n}\n","import { PopoverDirective } from './popover.directive';\nimport { PopoverContentComponent } from './popover-content.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [\n        PopoverDirective,\n        PopoverContentComponent\n    ],\n    imports: [\n        CommonModule,\n    ],\n    exports: [\n        PopoverContentComponent,\n        PopoverDirective\n    ],\n    entryComponents: [\n        PopoverContentComponent\n    ]\n})\nexport class PopoverModule { }\n"]}